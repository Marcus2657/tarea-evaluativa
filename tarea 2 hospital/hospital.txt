import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;

class Patient {
    private String ID;
    private String name;
    private String surname;
    private String birthDate;
    private String gender;
    private double weight;
    private double height;
    private String address;
    private List<Image> images;
    private List<Disease> diseases;

    public Patient(String ID, String name, String surname, String birthDate, String gender, double weight, double height, String address) {
        this.ID = ID;
        this.name = name;
        this.surname = surname;
        this.birthDate = birthDate;
        this.gender = gender;
        this.weight = weight;
        this.height = height;
        this.address = address;
        this.images = new ArrayList<>();
        this.diseases = new ArrayList<>();
    }

    // Getters and setters
    public String getID() {
        return ID;
    }

    public String getName() {
        return name;
    }

    public String getSurname() {
        return surname;
    }

    public String getBirthDate() {
        return birthDate;
    }

    public String getGender() {
        return gender;
    }

    public double getWeight() {
        return weight;
    }

    public double getHeight() {
        return height;
    }

    public String getAddress() {
        return address;
    }

    public void updateData(String name, String surname, String birthDate, String gender, double weight, double height, String address) {
        this.name = name;
        this.surname = surname;
        this.birthDate = birthDate;
        this.gender = gender;
        this.weight = weight;
        this.height = height;
        this.address = address;
    }

    public void addImage(Image image) {
        images.add(image);
    }

    public void deleteImage(Image image) {
        images.remove(image);
    }

    public void addDisease(Disease disease) {
        diseases.add(disease);
    }

    public void deleteDisease(Disease disease) {
        diseases.remove(disease);
    }
}

class Image {
    private String fileName;
    private String date;
    private String type;
    private String comments;

    public Image(String fileName, String date, String type, String comments) {
        this.fileName = fileName;
        this.date = date;
        this.type = type;
        this.comments = comments;
    }

    // Getters and setters
    public String getFileName() {
        return fileName;
    }

    public String getDate() {
        return date;
    }

    public String getType() {
        return type;
    }

    public String getComments() {
        return comments;
    }
}

class Disease {
    private String name;
    private String date;
    private String treatment;

    public Disease(String name, String date, String treatment) {
        this.name = name;
        this.date = date;
        this.treatment = treatment;
    }

    // Getters and setters
    public String getName() {
        return name;
    }

    public String getDate() {
        return date;
    }

    public String getTreatment() {
        return treatment;
    }
}

class MedicalRecord {
    private List<Patient> patientList = new ArrayList<>();

    public void searchPatientByID(String ID) {
        for (Patient patient : patientList) {
            if (patient.getID().equals(ID)) {
                // Show patient data
                System.out.println("Name: " + patient.getName());
                System.out.println("Gender: " + patient.getGender());
                System.out.println("Weight: " + patient.getWeight());
                System.out.println("Height: " + patient.getHeight());
                System.out.println("Number of images: " + patient.images.size());
                System.out.println("Number of diseases: " + patient.diseases.size());
            }
        }
    }

    public void getPatientsWithGreatestHeight() {
        double greatestHeight = 0;
        for (Patient patient : patientList) {
            if (patient.getHeight() > greatestHeight) {
                greatestHeight = patient.getHeight();
            }
        }
        for (Patient patient : patientList) {
            if (patient.getHeight() == greatestHeight) {
                System.out.println("ID: " + patient.getID());
            }
        }
    }

    public void getFemalePatientsWithDengueCount() {
        int count = 0;
        for (Patient patient : patientList) {
            if (patient.getGender().equals("F")) {
                for (Disease disease : patient.diseases) {
                    if (disease.getName().equals("Dengue")) {
                        count++;
                    }
                }
            }
        }
        System.out.println("Number of female patients with dengue: " + count);
    }

    public void getPatientsOrderedByName() {
        patientList.sort(Comparator.comparing(Patient::getName));
        for (Patient patient : patientList) {
            System.out.println("ID: " + patient.getID() + ", Name: " + patient.getName() + ", Weight: " + patient.getWeight() + ", Height: " + patient.getHeight());
        }
    }

    public void getPatientsOrderedByWeight() {
        patientList.sort(Comparator.comparing(Patient::getWeight).reversed());
        for (Patient patient : patientList) {
            System.out.println("ID: " + patient.getID() + ", Name: " + patient.getName() + ", Weight: " + patient.getWeight() + ", Height: " + patient.getHeight());
        }
    }

    public void addPatient(Patient patient) {
        patientList.add(patient);
    }

    public void deletePatient(Patient patient) {
        patientList.remove(patient);
    }

    public void updatePatient(Patient patient) {
        for (Patient p : patientList) {
            if (p.getID().equals(patient.getID())) {
                p.updateData(patient.getName(), patient.getSurname(), patient.getBirthDate(), patient.getGender(), patient.getWeight(), patient.getHeight(), patient.getAddress());
            }
        }
    }
}



    
       
